{"ast":null,"code":"import _defineProperty from \"/Users/carter/fall19/hackday/macrofood/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/carter/fall19/hackday/macrofood/src/Menu.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Meal from './Meal';\n\nconst dbRecipes = require('./recipes.json');\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchMeals = query => {\n      query = 'salt';\n      const dbRecipesWithSelection = dbRecipes.hits.map(meal => {\n        return _objectSpread({}, meal);\n      });\n      this.setState({\n        meals: dbRecipesWithSelection,\n        finishedLoading: true\n      });\n    };\n\n    this.handleClickInMenu = label => {\n      console.log('this meal was clicked from Menu component', label);\n    };\n\n    this.state = {\n      meals: [],\n      mealsSelected: [],\n      spinner: 'Loading...',\n      finishedLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMeals(this.props.query);\n  }\n\n  render() {\n    const mealsHTML = this.state.finishedLoading ? React.createElement(\"div\", {\n      className: \"testing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.meals.hits.map(meal => React.createElement(Meal, {\n      key: meal.recipe.label,\n      label: meal.recipe.label,\n      image: meal.recipe.image,\n      servings: meal.recipe.yield,\n      ingredientLines: meal.recipe.ingredientLines,\n      calories: meal.recipe.calories,\n      fat: meal.recipe.digest[0].total,\n      carbs: meal.recipe.digest[1].total,\n      protein: meal.recipe.digest[2].total,\n      handleClickInMenu: this.handleClickInMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))) : this.state.spinner;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Menu__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Menu\"), React.createElement(\"p\", {\n      className: \"Menu__description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Choose the meals you want:\")), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, mealsHTML));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/carter/fall19/hackday/macrofood/src/Menu.js"],"names":["React","Component","Meal","dbRecipes","require","Menu","constructor","props","fetchMeals","query","dbRecipesWithSelection","hits","map","meal","setState","meals","finishedLoading","handleClickInMenu","label","console","log","state","mealsSelected","spinner","componentDidMount","render","mealsHTML","recipe","image","yield","ingredientLines","calories","digest","total"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Meal from './Meal';\nconst dbRecipes = require('./recipes.json');\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meals: [],\n      mealsSelected: [],\n      spinner: 'Loading...',\n      finishedLoading: false,\n    }\n  }\n\n  componentDidMount() {\n    this.fetchMeals(this.props.query);\n  }\n\n  fetchMeals = (query) => {\n    query = 'salt';\n    const dbRecipesWithSelection = dbRecipes.hits.map(meal => {\n      return {...meal,\n\n      }\n    });\n    this.setState({meals: dbRecipesWithSelection, finishedLoading: true})  \n  }\n\n  handleClickInMenu = (label) => {\n    console.log('this meal was clicked from Menu component', label);\n  }\n\n  render() {\n    const mealsHTML = this.state.finishedLoading ?\n      <div className=\"testing\">\n        {this.state.meals.hits.map(meal => (\n          <Meal\n            key={meal.recipe.label}\n            label={meal.recipe.label}\n            image={meal.recipe.image}\n            servings={meal.recipe.yield}\n            ingredientLines={meal.recipe.ingredientLines}\n            calories={meal.recipe.calories}\n            fat={meal.recipe.digest[0].total}\n            carbs={meal.recipe.digest[1].total}\n            protein={meal.recipe.digest[2].total}\n            handleClickInMenu={this.handleClickInMenu}\n          />\n        ))}\n        \n      </div>\n\n      : this.state.spinner;\n\n    return (\n      <div className=\"container\">\n        <header className=\"Menu\">\n          <h1 className=\"Menu__title\">Menu</h1>\n          <p className=\"Menu__description\">\n            Choose the meals you want:\n          </p>\n        </header>\n\n        <div className=\"main\">\n          {mealsHTML}\n        </div>\n    \n      </div>\n    );\n  }\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}